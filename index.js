// index.js —Å OpenAI –∏ Google Calendar
import { Telegraf } from 'telegraf'
import 'dotenv/config'
import OpenAI from 'openai'
import { google } from 'googleapis'

const bot = new Telegraf(process.env.BOT_TOKEN)
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY })

const userContexts = {}

bot.start((ctx) => ctx.reply('‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç'))

bot.command('–ø–ª–∞–Ω', async (ctx) => {
  const auth = new google.auth.JWT(
    process.env.GOOGLE_CLIENT_EMAIL,
    null,
    process.env.GOOGLE_PRIVATE_KEY.replace(/\\n/g, '\n'),
    ['https://www.googleapis.com/auth/calendar.readonly']
  )

  const calendar = google.calendar({ version: 'v3', auth })

  const today = new Date()
  const startOfDay = new Date(today.setHours(0, 0, 0, 0)).toISOString()
  const endOfDay = new Date(today.setHours(23, 59, 59, 999)).toISOString()

  try {
    const res = await calendar.events.list({
      calendarId: process.env.GOOGLE_CALENDAR_ID,
      timeMin: startOfDay,
      timeMax: endOfDay,
      singleEvents: true,
      orderBy: 'startTime'
    })

    const events = res.data.items
    if (!events.length) return ctx.reply('üì≠ –ù–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞–¥–∞—á –Ω–µ—Ç')

    const message = events.map(e => `üïí ${e.summary} ‚Äî ${e.start.dateTime || e.start.date}`).join('\n')
    ctx.reply(message)
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', err)
    ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ –∏–∑ Google Calendar')
  }
})

bot.on('text', async (ctx) => {
  const userId = ctx.from.id
  const userMessage = ctx.message.text
  if (!userContexts[userId]) userContexts[userId] = []
  userContexts[userId].push({ role: 'user', content: userMessage })
  if (userContexts[userId].length > 6) userContexts[userId] = userContexts[userId].slice(-6)

  try {
    const completion = await openai.chat.completions.create({
      model: 'gpt-3.5-turbo',
      messages: [
        { role: 'system', content: '–¢—ã —É–º–Ω—ã–π Telegram-–±–æ—Ç, –ø–æ–º–æ–≥–∞–µ—à—å –ø–æ –∑–∞–¥–∞—á–∞–º, –≤–æ–ø—Ä–æ—Å–∞–º –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º' },
        ...userContexts[userId]
      ]
    })

    const botReply = completion.choices[0].message.content
    userContexts[userId].push({ role: 'assistant', content: botReply })
    ctx.reply(botReply)
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ OpenAI:', error)
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò')
  }
})

bot.launch()
console.log('‚úÖ CultBot Assistant –∑–∞–ø—É—â–µ–Ω (polling)')
